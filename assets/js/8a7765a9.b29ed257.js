"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3413],{2283:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"undergraduate-notes/programming/python","title":"Python \u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0","description":"\u8bfe\u7a0b\u6982\u8ff0","source":"@site/docs/undergraduate-notes/programming/python.md","sourceDirName":"undergraduate-notes/programming","slug":"/undergraduate-notes/programming/python","permalink":"/docs/undergraduate-notes/programming/python","draft":false,"unlisted":false,"editUrl":"https://github.com/bubblevan/bubblevan.github.io/tree/main/docs/undergraduate-notes/programming/python.md","tags":[],"version":"current","frontMatter":{}}');var i=e(4848),t=e(8453);const s={},a="Python \u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0",d={},o=[{value:"\u8bfe\u7a0b\u6982\u8ff0",id:"\u8bfe\u7a0b\u6982\u8ff0",level:2},{value:"\u5b66\u4e60\u76ee\u6807",id:"\u5b66\u4e60\u76ee\u6807",level:2},{value:"\u6838\u5fc3\u5185\u5bb9",id:"\u6838\u5fc3\u5185\u5bb9",level:2},{value:"\u57fa\u7840\u8bed\u6cd5",id:"\u57fa\u7840\u8bed\u6cd5",level:3},{value:"\u53d8\u91cf\u548c\u6570\u636e\u7c7b\u578b",id:"\u53d8\u91cf\u548c\u6570\u636e\u7c7b\u578b",level:4},{value:"\u63a7\u5236\u7ed3\u6784",id:"\u63a7\u5236\u7ed3\u6784",level:4},{value:"\u51fd\u6570\u5b9a\u4e49",id:"\u51fd\u6570\u5b9a\u4e49",level:4},{value:"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b",id:"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b",level:3},{value:"\u7c7b\u548c\u5bf9\u8c61",id:"\u7c7b\u548c\u5bf9\u8c61",level:4},{value:"\u7ee7\u627f\u548c\u591a\u6001",id:"\u7ee7\u627f\u548c\u591a\u6001",level:4},{value:"\u6570\u636e\u5904\u7406",id:"\u6570\u636e\u5904\u7406",level:3},{value:"NumPy \u57fa\u7840",id:"numpy-\u57fa\u7840",level:4},{value:"Pandas \u6570\u636e\u5904\u7406",id:"pandas-\u6570\u636e\u5904\u7406",level:4},{value:"\u79d1\u5b66\u8ba1\u7b97",id:"\u79d1\u5b66\u8ba1\u7b97",level:3},{value:"\u4fe1\u53f7\u5904\u7406",id:"\u4fe1\u53f7\u5904\u7406",level:4},{value:"\u56fe\u50cf\u5904\u7406",id:"\u56fe\u50cf\u5904\u7406",level:4},{value:"\u673a\u5668\u5b66\u4e60\u57fa\u7840",id:"\u673a\u5668\u5b66\u4e60\u57fa\u7840",level:3},{value:"\u6570\u636e\u9884\u5904\u7406",id:"\u6570\u636e\u9884\u5904\u7406",level:4},{value:"\u5b9e\u8df5\u9879\u76ee",id:"\u5b9e\u8df5\u9879\u76ee",level:2},{value:"\u9879\u76ee\u4e00\uff1a\u751f\u7269\u4fe1\u53f7\u5206\u6790\u5668",id:"\u9879\u76ee\u4e00\u751f\u7269\u4fe1\u53f7\u5206\u6790\u5668",level:3},{value:"\u5b66\u4e60\u8d44\u6e90",id:"\u5b66\u4e60\u8d44\u6e90",level:2},{value:"\u5b98\u65b9\u6587\u6863",id:"\u5b98\u65b9\u6587\u6863",level:3},{value:"\u5728\u7ebf\u8bfe\u7a0b",id:"\u5728\u7ebf\u8bfe\u7a0b",level:3},{value:"\u5b9e\u8df5\u5e73\u53f0",id:"\u5b9e\u8df5\u5e73\u53f0",level:3},{value:"\u5b66\u4e60\u5fc3\u5f97",id:"\u5b66\u4e60\u5fc3\u5f97",level:2},{value:"\u5b66\u4e60\u5efa\u8bae",id:"\u5b66\u4e60\u5efa\u8bae",level:3},{value:"\u5e38\u89c1\u95ee\u9898",id:"\u5e38\u89c1\u95ee\u9898",level:3}];function c(n){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"python-\u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0",children:"Python \u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0"})}),"\n",(0,i.jsx)(r.h2,{id:"\u8bfe\u7a0b\u6982\u8ff0",children:"\u8bfe\u7a0b\u6982\u8ff0"}),"\n",(0,i.jsx)(r.p,{children:"Python \u662f\u751f\u7269\u533b\u5b66\u5de5\u7a0b\u4e13\u4e1a\u7684\u91cd\u8981\u7f16\u7a0b\u8bed\u8a00\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u6570\u636e\u5206\u6790\u3001\u4fe1\u53f7\u5904\u7406\u3001\u673a\u5668\u5b66\u4e60\u7b49\u9886\u57df\u3002"}),"\n",(0,i.jsx)(r.h2,{id:"\u5b66\u4e60\u76ee\u6807",children:"\u5b66\u4e60\u76ee\u6807"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"\u638c\u63e1 Python \u57fa\u672c\u8bed\u6cd5\u548c\u7f16\u7a0b\u601d\u60f3"}),"\n",(0,i.jsx)(r.li,{children:"\u5b66\u4f1a\u4f7f\u7528 Python \u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97"}),"\n",(0,i.jsx)(r.li,{children:"\u80fd\u591f\u5904\u7406\u751f\u7269\u533b\u5b66\u6570\u636e"}),"\n",(0,i.jsx)(r.li,{children:"\u4e3a\u540e\u7eed\u4e13\u4e1a\u8bfe\u7a0b\u6253\u4e0b\u7f16\u7a0b\u57fa\u7840"}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"\u6838\u5fc3\u5185\u5bb9",children:"\u6838\u5fc3\u5185\u5bb9"}),"\n",(0,i.jsx)(r.h3,{id:"\u57fa\u7840\u8bed\u6cd5",children:"\u57fa\u7840\u8bed\u6cd5"}),"\n",(0,i.jsx)(r.h4,{id:"\u53d8\u91cf\u548c\u6570\u636e\u7c7b\u578b",children:"\u53d8\u91cf\u548c\u6570\u636e\u7c7b\u578b"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'# \u57fa\u672c\u6570\u636e\u7c7b\u578b\r\nname = "\u5305\u535a\u6587"          # \u5b57\u7b26\u4e32\r\nage = 25               # \u6574\u6570\r\nheight = 175.5         # \u6d6e\u70b9\u6570\r\nis_student = True      # \u5e03\u5c14\u503c\r\n\r\n# \u590d\u5408\u6570\u636e\u7c7b\u578b\r\nhobbies = ["\u7f16\u7a0b", "\u9605\u8bfb", "\u8fd0\u52a8"]  # \u5217\u8868\r\ninfo = {"name": "\u5305\u535a\u6587", "age": 25}  # \u5b57\u5178\r\ncoordinates = (10, 20)  # \u5143\u7ec4\n'})}),"\n",(0,i.jsx)(r.h4,{id:"\u63a7\u5236\u7ed3\u6784",children:"\u63a7\u5236\u7ed3\u6784"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'# \u6761\u4ef6\u8bed\u53e5\r\nif age >= 18:\r\n    print("\u6210\u5e74\u4eba")\r\nelif age >= 12:\r\n    print("\u9752\u5c11\u5e74")\r\nelse:\r\n    print("\u513f\u7ae5")\r\n\r\n# \u5faa\u73af\u8bed\u53e5\r\nfor hobby in hobbies:\r\n    print(f"\u7231\u597d: {hobby}")\r\n\r\n# while \u5faa\u73af\r\ncount = 0\r\nwhile count < 5:\r\n    print(count)\r\n    count += 1\n'})}),"\n",(0,i.jsx)(r.h4,{id:"\u51fd\u6570\u5b9a\u4e49",children:"\u51fd\u6570\u5b9a\u4e49"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'def greet(name, greeting="Hello"):\r\n    """\u95ee\u5019\u51fd\u6570"""\r\n    return f"{greeting}, {name}!"\r\n\r\n# \u8c03\u7528\u51fd\u6570\r\nresult = greet("\u5305\u535a\u6587")\r\nprint(result)  # Hello, \u5305\u535a\u6587!\r\n\r\n# \u5e26\u9ed8\u8ba4\u53c2\u6570\u7684\u51fd\u6570\r\ndef calculate_bmi(weight, height):\r\n    """\u8ba1\u7b97BMI\u6307\u6570"""\r\n    bmi = weight / (height / 100) ** 2\r\n    return round(bmi, 2)\r\n\r\nbmi = calculate_bmi(70, 175)\r\nprint(f"BMI: {bmi}")\n'})}),"\n",(0,i.jsx)(r.h3,{id:"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b",children:"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b"}),"\n",(0,i.jsx)(r.h4,{id:"\u7c7b\u548c\u5bf9\u8c61",children:"\u7c7b\u548c\u5bf9\u8c61"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'class Student:\r\n    """\u5b66\u751f\u7c7b"""\r\n    \r\n    def __init__(self, name, age, major):\r\n        self.name = name\r\n        self.age = age\r\n        self.major = major\r\n        self.courses = []\r\n    \r\n    def add_course(self, course):\r\n        """\u6dfb\u52a0\u8bfe\u7a0b"""\r\n        self.courses.append(course)\r\n        print(f"{self.name} \u6dfb\u52a0\u4e86\u8bfe\u7a0b: {course}")\r\n    \r\n    def get_info(self):\r\n        """\u83b7\u53d6\u5b66\u751f\u4fe1\u606f"""\r\n        return {\r\n            "name": self.name,\r\n            "age": self.age,\r\n            "major": self.major,\r\n            "courses": self.courses\r\n        }\r\n\r\n# \u521b\u5efa\u5b66\u751f\u5bf9\u8c61\r\nstudent = Student("\u5305\u535a\u6587", 25, "\u751f\u7269\u533b\u5b66\u5de5\u7a0b")\r\nstudent.add_course("Python\u7f16\u7a0b")\r\nstudent.add_course("\u751f\u7269\u4fe1\u53f7\u5904\u7406")\r\nprint(student.get_info())\n'})}),"\n",(0,i.jsx)(r.h4,{id:"\u7ee7\u627f\u548c\u591a\u6001",children:"\u7ee7\u627f\u548c\u591a\u6001"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'class Person:\r\n    def __init__(self, name, age):\r\n        self.name = name\r\n        self.age = age\r\n    \r\n    def introduce(self):\r\n        return f"\u6211\u662f {self.name}\uff0c\u4eca\u5e74 {self.age} \u5c81"\r\n\r\nclass Student(Person):\r\n    def __init__(self, name, age, student_id):\r\n        super().__init__(name, age)\r\n        self.student_id = student_id\r\n    \r\n    def introduce(self):\r\n        return f"{super().introduce()}\uff0c\u5b66\u53f7\u662f {self.student_id}"\r\n\r\n# \u591a\u6001\u793a\u4f8b\r\nperson = Person("\u5f20\u4e09", 30)\r\nstudent = Student("\u5305\u535a\u6587", 25, "2021001")\r\n\r\nprint(person.introduce())\r\nprint(student.introduce())\n'})}),"\n",(0,i.jsx)(r.h3,{id:"\u6570\u636e\u5904\u7406",children:"\u6570\u636e\u5904\u7406"}),"\n",(0,i.jsx)(r.h4,{id:"numpy-\u57fa\u7840",children:"NumPy \u57fa\u7840"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"import numpy as np\r\n\r\n# \u521b\u5efa\u6570\u7ec4\r\narr1 = np.array([1, 2, 3, 4, 5])\r\narr2 = np.zeros((3, 3))\r\narr3 = np.ones((2, 4))\r\narr4 = np.arange(0, 10, 2)\r\n\r\n# \u6570\u7ec4\u64cd\u4f5c\r\nprint(arr1.shape)  # (5,)\r\nprint(arr1.dtype)  # int64\r\nprint(arr1.mean())  # \u5e73\u5747\u503c\r\nprint(arr1.std())   # \u6807\u51c6\u5dee\r\n\r\n# \u77e9\u9635\u8fd0\u7b97\r\nmatrix1 = np.array([[1, 2], [3, 4]])\r\nmatrix2 = np.array([[5, 6], [7, 8]])\r\nresult = np.dot(matrix1, matrix2)\r\nprint(result)\n"})}),"\n",(0,i.jsx)(r.h4,{id:"pandas-\u6570\u636e\u5904\u7406",children:"Pandas \u6570\u636e\u5904\u7406"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"import pandas as pd\r\n\r\n# \u521b\u5efa\u6570\u636e\u6846\r\ndata = {\r\n    '\u59d3\u540d': ['\u5305\u535a\u6587', '\u5f20\u4e09', '\u674e\u56db'],\r\n    '\u5e74\u9f84': [25, 30, 28],\r\n    '\u4e13\u4e1a': ['\u751f\u7269\u533b\u5b66\u5de5\u7a0b', '\u8ba1\u7b97\u673a\u79d1\u5b66', '\u673a\u68b0\u5de5\u7a0b'],\r\n    '\u6210\u7ee9': [85, 92, 78]\r\n}\r\ndf = pd.DataFrame(data)\r\n\r\n# \u6570\u636e\u67e5\u770b\r\nprint(df.head())\r\nprint(df.describe())\r\n\r\n# \u6570\u636e\u7b5b\u9009\r\nyoung_students = df[df['\u5e74\u9f84'] < 30]\r\nhigh_scores = df[df['\u6210\u7ee9'] > 80]\r\n\r\n# \u6570\u636e\u7edf\u8ba1\r\nprint(f\"\u5e73\u5747\u5e74\u9f84: {df['\u5e74\u9f84'].mean()}\")\r\nprint(f\"\u6210\u7ee9\u6807\u51c6\u5dee: {df['\u6210\u7ee9'].std()}\")\n"})}),"\n",(0,i.jsx)(r.h3,{id:"\u79d1\u5b66\u8ba1\u7b97",children:"\u79d1\u5b66\u8ba1\u7b97"}),"\n",(0,i.jsx)(r.h4,{id:"\u4fe1\u53f7\u5904\u7406",children:"\u4fe1\u53f7\u5904\u7406"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"import numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom scipy import signal\r\n\r\n# \u751f\u6210\u6a21\u62df\u5fc3\u7535\u4fe1\u53f7\r\nt = np.linspace(0, 10, 1000)\r\n# \u6a21\u62df\u5fc3\u8df3\u4fe1\u53f7\r\nheartbeat = np.sin(2 * np.pi * 1.2 * t) * np.exp(-0.5 * t)\r\nnoise = np.random.normal(0, 0.1, len(t))\r\necg_signal = heartbeat + noise\r\n\r\n# \u6ee4\u6ce2\u5904\u7406\r\nb, a = signal.butter(4, 0.1, 'low')\r\nfiltered_signal = signal.filtfilt(b, a, ecg_signal)\r\n\r\n# \u7ed8\u5236\u7ed3\u679c\r\nplt.figure(figsize=(12, 6))\r\nplt.subplot(2, 1, 1)\r\nplt.plot(t, ecg_signal, label='\u539f\u59cb\u4fe1\u53f7')\r\nplt.title('\u539f\u59cb\u5fc3\u7535\u4fe1\u53f7')\r\nplt.legend()\r\n\r\nplt.subplot(2, 1, 2)\r\nplt.plot(t, filtered_signal, label='\u6ee4\u6ce2\u540e\u4fe1\u53f7', color='red')\r\nplt.title('\u6ee4\u6ce2\u540e\u5fc3\u7535\u4fe1\u53f7')\r\nplt.legend()\r\nplt.tight_layout()\r\nplt.show()\n"})}),"\n",(0,i.jsx)(r.h4,{id:"\u56fe\u50cf\u5904\u7406",children:"\u56fe\u50cf\u5904\u7406"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"import cv2\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\n# \u8bfb\u53d6\u56fe\u50cf\r\nimage = cv2.imread('medical_image.jpg')\r\ngray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\r\n\r\n# \u56fe\u50cf\u9884\u5904\u7406\r\n# \u9ad8\u65af\u6a21\u7cca\r\nblurred = cv2.GaussianBlur(gray, (5, 5), 0)\r\n\r\n# \u8fb9\u7f18\u68c0\u6d4b\r\nedges = cv2.Canny(blurred, 50, 150)\r\n\r\n# \u663e\u793a\u7ed3\u679c\r\nplt.figure(figsize=(15, 5))\r\nplt.subplot(1, 3, 1)\r\nplt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))\r\nplt.title('\u539f\u59cb\u56fe\u50cf')\r\n\r\nplt.subplot(1, 3, 2)\r\nplt.imshow(blurred, cmap='gray')\r\nplt.title('\u9ad8\u65af\u6a21\u7cca')\r\n\r\nplt.subplot(1, 3, 3)\r\nplt.imshow(edges, cmap='gray')\r\nplt.title('\u8fb9\u7f18\u68c0\u6d4b')\r\nplt.show()\n"})}),"\n",(0,i.jsx)(r.h3,{id:"\u673a\u5668\u5b66\u4e60\u57fa\u7840",children:"\u673a\u5668\u5b66\u4e60\u57fa\u7840"}),"\n",(0,i.jsx)(r.h4,{id:"\u6570\u636e\u9884\u5904\u7406",children:"\u6570\u636e\u9884\u5904\u7406"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'from sklearn.preprocessing import StandardScaler\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.linear_model import LogisticRegression\r\nfrom sklearn.metrics import accuracy_score, classification_report\r\n\r\n# \u52a0\u8f7d\u6570\u636e\uff08\u793a\u4f8b\uff09\r\n# \u5047\u8bbe\u6211\u4eec\u6709\u533b\u7597\u6570\u636e\r\nX = np.random.randn(100, 5)  # \u7279\u5f81\r\ny = np.random.randint(0, 2, 100)  # \u6807\u7b7e\r\n\r\n# \u6570\u636e\u5206\u5272\r\nX_train, X_test, y_train, y_test = train_test_split(\r\n    X, y, test_size=0.2, random_state=42\r\n)\r\n\r\n# \u6570\u636e\u6807\u51c6\u5316\r\nscaler = StandardScaler()\r\nX_train_scaled = scaler.fit_transform(X_train)\r\nX_test_scaled = scaler.transform(X_test)\r\n\r\n# \u8bad\u7ec3\u6a21\u578b\r\nmodel = LogisticRegression()\r\nmodel.fit(X_train_scaled, y_train)\r\n\r\n# \u9884\u6d4b\u548c\u8bc4\u4f30\r\ny_pred = model.predict(X_test_scaled)\r\naccuracy = accuracy_score(y_test, y_pred)\r\nprint(f"\u51c6\u786e\u7387: {accuracy:.2f}")\n'})}),"\n",(0,i.jsx)(r.h2,{id:"\u5b9e\u8df5\u9879\u76ee",children:"\u5b9e\u8df5\u9879\u76ee"}),"\n",(0,i.jsx)(r.h3,{id:"\u9879\u76ee\u4e00\u751f\u7269\u4fe1\u53f7\u5206\u6790\u5668",children:"\u9879\u76ee\u4e00\uff1a\u751f\u7269\u4fe1\u53f7\u5206\u6790\u5668"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'class BioSignalAnalyzer:\r\n    """\u751f\u7269\u4fe1\u53f7\u5206\u6790\u5668"""\r\n    \r\n    def __init__(self, signal, sampling_rate):\r\n        self.signal = np.array(signal)\r\n        self.sampling_rate = sampling_rate\r\n        self.time = np.arange(len(signal)) / sampling_rate\r\n    \r\n    def filter_signal(self, low_freq=0.5, high_freq=50):\r\n        """\u5e26\u901a\u6ee4\u6ce2"""\r\n        from scipy.signal import butter, filtfilt\r\n        \r\n        nyquist = self.sampling_rate / 2\r\n        low = low_freq / nyquist\r\n        high = high_freq / nyquist\r\n        \r\n        b, a = butter(4, [low, high], btype=\'band\')\r\n        filtered = filtfilt(b, a, self.signal)\r\n        return filtered\r\n    \r\n    def find_peaks(self, height=None, distance=None):\r\n        """\u5cf0\u503c\u68c0\u6d4b"""\r\n        from scipy.signal import find_peaks\r\n        \r\n        peaks, properties = find_peaks(self.signal, height=height, distance=distance)\r\n        return peaks, properties\r\n    \r\n    def calculate_hrv(self):\r\n        """\u8ba1\u7b97\u5fc3\u7387\u53d8\u5f02\u6027"""\r\n        peaks, _ = self.find_peaks(height=0.5, distance=50)\r\n        rr_intervals = np.diff(peaks) / self.sampling_rate * 1000  # \u8f6c\u6362\u4e3a\u6beb\u79d2\r\n        \r\n        hrv_metrics = {\r\n            \'mean_rr\': np.mean(rr_intervals),\r\n            \'std_rr\': np.std(rr_intervals),\r\n            \'rmssd\': np.sqrt(np.mean(np.diff(rr_intervals) ** 2))\r\n        }\r\n        return hrv_metrics\r\n    \r\n    def plot_signal(self, filtered=False):\r\n        """\u7ed8\u5236\u4fe1\u53f7"""\r\n        plt.figure(figsize=(12, 6))\r\n        \r\n        if filtered:\r\n            signal_to_plot = self.filter_signal()\r\n            title = "\u6ee4\u6ce2\u540e\u4fe1\u53f7"\r\n        else:\r\n            signal_to_plot = self.signal\r\n            title = "\u539f\u59cb\u4fe1\u53f7"\r\n        \r\n        plt.plot(self.time, signal_to_plot)\r\n        plt.title(title)\r\n        plt.xlabel(\'\u65f6\u95f4 (\u79d2)\')\r\n        plt.ylabel(\'\u5e45\u503c\')\r\n        plt.grid(True)\r\n        plt.show()\r\n\r\n# \u4f7f\u7528\u793a\u4f8b\r\n# \u751f\u6210\u6a21\u62df\u5fc3\u7535\u4fe1\u53f7\r\nt = np.linspace(0, 10, 1000)\r\necg = np.sin(2 * np.pi * 1.2 * t) * np.exp(-0.1 * t) + 0.1 * np.random.randn(1000)\r\n\r\nanalyzer = BioSignalAnalyzer(ecg, 100)\r\nanalyzer.plot_signal()\r\nanalyzer.plot_signal(filtered=True)\r\n\r\nhrv = analyzer.calculate_hrv()\r\nprint("\u5fc3\u7387\u53d8\u5f02\u6027\u6307\u6807:", hrv)\n'})}),"\n",(0,i.jsx)(r.h2,{id:"\u5b66\u4e60\u8d44\u6e90",children:"\u5b66\u4e60\u8d44\u6e90"}),"\n",(0,i.jsx)(r.h3,{id:"\u5b98\u65b9\u6587\u6863",children:"\u5b98\u65b9\u6587\u6863"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://docs.python.org/",children:"Python \u5b98\u65b9\u6587\u6863"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://numpy.org/doc/",children:"NumPy \u6587\u6863"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://pandas.pydata.org/docs/",children:"Pandas \u6587\u6863"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://scipy.org/",children:"SciPy \u6587\u6863"})}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"\u5728\u7ebf\u8bfe\u7a0b",children:"\u5728\u7ebf\u8bfe\u7a0b"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Python \u5b98\u65b9\u6559\u7a0b"}),"\n",(0,i.jsx)(r.li,{children:"Coursera Python \u8bfe\u7a0b"}),"\n",(0,i.jsx)(r.li,{children:"\u6155\u8bfe\u7f51 Python \u8bfe\u7a0b"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"\u5b9e\u8df5\u5e73\u53f0",children:"\u5b9e\u8df5\u5e73\u53f0"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Jupyter Notebook"}),"\n",(0,i.jsx)(r.li,{children:"Google Colab"}),"\n",(0,i.jsx)(r.li,{children:"Kaggle"}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"\u5b66\u4e60\u5fc3\u5f97",children:"\u5b66\u4e60\u5fc3\u5f97"}),"\n",(0,i.jsx)(r.h3,{id:"\u5b66\u4e60\u5efa\u8bae",children:"\u5b66\u4e60\u5efa\u8bae"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"\u591a\u5199\u4ee3\u7801"}),": \u901a\u8fc7\u5b9e\u8df5\u638c\u63e1\u8bed\u6cd5"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"\u9879\u76ee\u9a71\u52a8"}),": \u901a\u8fc7\u9879\u76ee\u5b66\u4e60\u5e94\u7528"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"\u9605\u8bfb\u6e90\u7801"}),": \u5b66\u4e60\u4f18\u79c0\u7684\u4ee3\u7801\u98ce\u683c"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"\u53c2\u4e0e\u793e\u533a"}),": \u52a0\u5165 Python \u793e\u533a"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"\u5e38\u89c1\u95ee\u9898",children:"\u5e38\u89c1\u95ee\u9898"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"\u73af\u5883\u914d\u7f6e"}),": \u6b63\u786e\u5b89\u88c5 Python \u548c\u76f8\u5173\u5e93"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"\u7248\u672c\u517c\u5bb9"}),": \u6ce8\u610f\u4e0d\u540c\u7248\u672c\u7684\u5dee\u5f02"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"\u6027\u80fd\u4f18\u5316"}),": \u5b66\u4e60\u63d0\u9ad8\u4ee3\u7801\u6548\u7387\u7684\u65b9\u6cd5"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"\u8c03\u8bd5\u6280\u5de7"}),": \u638c\u63e1\u8c03\u8bd5\u5de5\u5177\u7684\u4f7f\u7528"]}),"\n"]})]})}function p(n={}){const{wrapper:r}={...(0,t.R)(),...n.components};return r?(0,i.jsx)(r,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,r,e)=>{e.d(r,{R:()=>s,x:()=>a});var l=e(6540);const i={},t=l.createContext(i);function s(n){const r=l.useContext(t);return l.useMemo(function(){return"function"==typeof n?n(r):{...r,...n}},[r,n])}function a(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),l.createElement(t.Provider,{value:r},n.children)}}}]);